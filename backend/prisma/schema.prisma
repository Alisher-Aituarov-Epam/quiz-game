// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  name          String
  role          Role       @default(USER)
  password      String
  score         Int        @default(0)
  avatar        String?
  questions     Question[]
  seenQuestions Int[]
  quizs         Quiz[]

  @@map("users")
}

model Difficulty {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  questions Question[]
  quizs     Quiz[]

  @@map("difficulties")
}

model Genre {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  questions Question[]
  quizs     Quiz[]

  @@map("genres")
}

model Question {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  content      String
  pointPrice   Int
  active       Boolean     @default(false)
  rating       Int         @default(0)
  approved     Boolean     @default(false)
  Owner        User?       @relation(fields: [ownerId], references: [id])
  ownerId      Int?
  Difficulty   Difficulty? @relation(fields: [difficultyId], references: [id])
  difficultyId Int?
  Genre        Genre?      @relation(fields: [genreId], references: [id])
  genreId      Int?
  answers      Answer[]

  @@map("questions")
}

model Answer {
  id         Int       @id @default(autoincrement())
  content    String
  correct    Boolean
  Question   Question? @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId Int?

  @@map("answers")
}

model Quiz {
  id           Int         @id @default(autoincrement())
  User         User?       @relation(fields: [userId], references: [id])
  userId       Int?
  startTime    DateTime    @default(now())
  endTime      DateTime?
  Genre        Genre?      @relation(fields: [genreId], references: [id])
  genreId      Int?
  Difficulty   Difficulty? @relation(fields: [difficultyId], references: [id])
  difficultyId Int?
  amount       Int?
  current      Int?        @default(0)
  questions    Int[]
  points       Int         @default(0)

  @@map("quizs")
}

enum Role {
  USER
  ADMIN
}
